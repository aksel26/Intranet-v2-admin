"use client";
import {
  ActionIcon,
  Box,
  Button,
  Checkbox,
  Divider,
  Group,
  Menu,
  NumberFormatter,
  NumberInput,
  Paper,
  Popover,
  Stack,
  Table,
  Text,
  TextInput,
} from "@mantine/core";
import { useDisclosure } from "@mantine/hooks";
import { useState } from "react";
import More from "/public/icons/dots.svg";
const elements = Array.from({ length: 41 }, (_, index) => {
  return { position: index + 1, grade: "Î≥∏Î∂ÄÏû•", balance: 1500, expense: 75300, amount: 500000, name: "ÍπÄÌòÑÍ∑º2", etc: "ÏõåÌÅ¨ÏÉµ Í≤ΩÌíà (Î≥µÏßÄÌè¨Ïù∏Ìä∏ 2Î∞∞ Ïù¥Î≤§Ìä∏)" };
});
function page() {
  const [total, setTotal] = useState(0);
  const [result, setResult] = useState(0);
  const defaultPrice = (e: any) => {
    setResult((prev) => e * 23);

    console.log("üöÄ ~ defaultPrice ~ e:", e);
  };

  const [opened, { toggle, close }] = useDisclosure(false);

  const rows = elements.map((element) => (
    <Table.Tr key={element.position}>
      <Table.Td>{element.position}</Table.Td>
      <Table.Td>{element.grade}</Table.Td>
      <Table.Td>{element.name}</Table.Td>
      <Table.Td>
        <NumberFormatter thousandSeparator value={element.position === 3 ? 1000000 : element.amount} suffix=" Ïõê" />
      </Table.Td>
      <Table.Td>{element.position === 3 ? element.etc : ""}</Table.Td>
      <Table.Td>
        <Popover width={300} position="bottom-end" withArrow shadow="md">
          <Popover.Target>
            <ActionIcon variant="light" size={"sm"}>
              <More width="15" height="15" strokeWidth="1.5" />
            </ActionIcon>
          </Popover.Target>
          <Popover.Dropdown bg="var(--mantine-color-body)">
            <Stack>
              <Group align="end">
                <TextInput size="sm" label="Ï¥ù ÏÇ¨Ïö©Í∏àÏï° ÏàòÏ†ï" placeholder="Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî." styles={{ root: { flex: 1 } }} />
                <Button size="sm" variant="light">
                  ÏàòÏ†ï
                </Button>
              </Group>

              <Group align="end">
                <TextInput size="sm" label="ÎπÑÍ≥† ÎÇ¥Ïö© ÏûëÏÑ±" placeholder="ÎπÑÍ≥† ÎÇ¥Ïö©ÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî." styles={{ root: { flex: 1 } }} />
                <Button size="sm" variant="light">
                  Ï†ÄÏû•
                </Button>
              </Group>
            </Stack>
          </Popover.Dropdown>
        </Popover>
      </Table.Td>
    </Table.Tr>
  ));

  return (
    <Box pb={50}>
      <Text fw={900} size="xl" mb={"xl"}>
        Î≥µÏßÄÌè¨Ïù∏Ìä∏ ÏÑ§Ï†ï
      </Text>
      <Stack mb={"xl"} gap={"sm"}>
        <Paper p="lg" withBorder radius={"lg"} px={"xl"} w={"max-content"}>
          <Stack gap={"lg"}>
            <Text size="md" fw={700}>
              Î≥µÏßÄÌè¨Ïù∏Ìä∏ Í∏∞Î≥∏Í∏àÏï° ÏÑ§Ï†ï
            </Text>

            <Group align="end" gap={"xl"}>
              <Checkbox.Group
                defaultValue={["1ÎÖÑ"]}
                label="Ï†ÅÏö© Í∏∞Í∞Ñ ÏÑ§Ï†ï"
                description="Î≥µÏßÄÌè¨Ïù∏Ìä∏Í∞Ä ÏÑ§Ï†ïÌïú Í∏∞Í∞ÑÏóê ÏùºÍ¥ÑÏ†ÅÏúºÎ°ú Ï†ÅÏö©Îê©ÎãàÎã§."
                withAsterisk
                styles={{ description: { marginBottom: 17 } }}
              >
                <Group mt="xs">
                  <Checkbox value="1ÎÖÑ" label="1ÎÖÑ" />
                  <Checkbox value="ÏÉÅÎ∞òÍ∏∞" label="ÏÉÅÎ∞òÍ∏∞" />
                  <Checkbox value="ÌïòÎ∞òÍ∏∞" label="ÌïòÎ∞òÍ∏∞" />
                </Group>
              </Checkbox.Group>
              <Divider orientation="vertical" size={"sm"} />
              <Group align="end" gap={"xl"}>
                <NumberInput
                  withAsterisk
                  label="Î≥µÏßÄÌè¨Ïù∏Ìä∏ Í∏àÏï°"
                  description="ÏÑ§Ï†ïÎê† Î≥µÏßÄÌè¨Ïù∏Ìä∏ Í∏∞Î≥∏ Í∏àÏï°ÏùÑ ÏûÖÎ†•Ìï¥ Ï£ºÏÑ∏Ïöî."
                  placeholder="0,000Ïõê"
                  thousandSeparator=","
                  hideControls
                  suffix=" Ïõê"
                  onChange={defaultPrice}
                />

                <Button radius={"md"}>Ï†ÄÏû•</Button>
              </Group>
            </Group>
          </Stack>
        </Paper>
      </Stack>
      <Divider my="md" />

      <Table striped stickyHeader stickyHeaderOffset={50} highlightOnHover>
        <Table.Thead>
          <Table.Tr>
            <Table.Th>No.</Table.Th>
            <Table.Th>ÏßÅÍ∏â</Table.Th>
            <Table.Th>ÏÑ±Î™Ö</Table.Th>
            <Table.Th>Ï¥ù ÏÇ¨Ïö©Í∞ÄÎä• Í∏àÏï°</Table.Th>
            <Table.Th>ÎπÑÍ≥†</Table.Th>
            <Table.Th />
          </Table.Tr>
        </Table.Thead>
        <Table.Tbody>{rows}</Table.Tbody>
      </Table>
    </Box>
  );
}

export default page;
